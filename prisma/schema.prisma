// first step
generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    // url      = "mysql://root:Skillware4u@167.86.66.12:3306/pure_worker"
    url      = env("DATABASE_URL")
}

enum UserType {
    FREELANCER
    BUSINESS
    CUSTOMER
    PROVIDER
}

model User {
    id           Int       @id @default(autoincrement())
    firstName    String?
    lastName     String?
    email        String    @unique
    phoneNumber  String?
    otp          Int
    dob          DateTime?
    businessName String?
    cacNo        String?
    location     String?
    address      String?
    gender       String?
    nationality  String?
    isVerified   Boolean   @default(false)
    userType     UserType
    Service      Service[]
}

model Category {
    id          Int           @id @default(autoincrement())
    name        String
    SubCategory SubCategory[]
}

model SubCategory {
    id         Int      @id @default(autoincrement())
    label      String
    value      String
    category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
    categoryId Int
}

model Service {
    id                Int               @id @default(autoincrement())
    profilePicture    String?           @db.LongText
    description       String
    serviceDetail     Json
    price             Json
    city              String
    idNumber          String?
    businessName      String?
    cac               String?
    scheduleDate      String?
    appointmentTime   String?
    fullNameFirst     String?
    relationFirst     String?
    emailFirst        String?
    phoneNumberFirst  String?
    addressFirst      String?
    fullNameSecond    String?
    relationSecond    String?
    emailSecond       String?
    phoneNumberSecond String?
    addressSecond     String?
    User              User              @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId            Int
    ServicePotfolio   ServicePotfolio[]
}

model ServicePotfolio {
    id                  Int     @id @default(autoincrement())
    description         String
    potfolioImageFirst  String? @db.LongText
    potfolioImageSecond String? @db.LongText
    potfolioImageThird  String? @db.LongText
    service             Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
    serviceId           Int
}
